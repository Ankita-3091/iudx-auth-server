#!/bin/sh

id=`id | cut -f1 -d'('`
if [ $id != "uid=0" ]
then
	echo
	echo "You must be root to run this script"
	echo
	exit
fi

syspatch

pkg_add postgresql-server postgresql-client node
rcctl enable postgresql

head /dev/random | sha256 > crl.db.password
head /dev/random | sha256 > auth.db.password
head /dev/random | sha256 > postgres.db.password

echo your-telegram-api-key > telegram.apikey
echo your-telegram-chat-id > telegram.chatid

crl_password=`cat crl.db.password`
sed -i "s/XXXcrlXXX/$crl_password/" postgres.sql 

auth_password=`cat auth.db.password`
sed -i "s/XXXauthXXX/$auth_password/" postgres.sql 

cp postgres.db.password /var/postgresql
cp setup.postgres.openbsd /var/postgresql
chmod a+x /var/postgresql/setup.postgres.openbsd

cp postgres.sql /var/postgresql
su _postgresql -c /var/postgresql/setup.postgres.openbsd

until su _postgresql -c pg_isready
do
	sleep 0.1
done

# setup postgres

cp rc.local /etc/
cp pf.conf /etc/

openssl req -x509 -nodes -days 365 -subj "/CN=localhost" -newkey rsa:2048 -keyout key.pem -out server.pem

git clone https://github.com/rbccps-iisc/node-aperture
cd node-aperture
npm install

cd ..
npm install
npm audit fix

echo /sbin/pfctl -t bruteforce -T expire 86400 >> /detc/daily.local
echo syspatch >> /etc/daily.local
echo boot >> /etc/boot.conf

rcctl disable sndiod slaacd smtpd xenodm 

echo "Will reboot now"
sleep 1

reboot
