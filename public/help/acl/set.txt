
Set access control policy
-------------------------

Endpoint:
	https://<server>/auth/v1/acl/set

Methods:
	POST

Description:
	This API is used to set access control policies.

Called by:
	A resource-owner with a valid class-3 or above certificate.

Headers:

	content-type: "application/json"

Body:

	policy:	"acl policy (a string) in aperture policy language"

HTTP response code:

	200
		If the policy has been successfully set.

	400
		If the policy contains syntax errors.

Aperture policy language:

	The authorization rules are in aperture policy language,
	and are in the format:

		<consumer(s)>
			CAN access <resource-id(s)>
			FOR <n> <second(s)/minute(s)/week(s)/month(s)/year(s)>
			IF <condition> AND/OR <more-conditions>

	Examples:

		barun@iisc.ac.in can access resource-server.com/streetlights.SL1 for 2 hours

		arun.babu@rbcps.org, *@iisc.ac.in can access * if time > 18:00:00 and time < 24:00:00

		all can access resource-server.com/public.* if api = '/latest' AND country = "IN"

	It also supports conditions such as:

		ip = 10.0.0.1

		cert.cn like /* at IISc/i

		latitude > 20.03 AND longitude > 40.22

		time::day in (Monday, Tuesday, Wednesday, Thursday, Friday)

		consumer-in-group("confidential")

	You may use a single "*", or "all", "everything", or "anything" to match any identifier; example:

	    barun@iisc.ac.in can access *

	    all can access anything

	Several rules could be combined together using semi-colons:

		rule-1; rule-2; .... ; rule-n

Variables in policy language:

	Below are the variables available in rules, and its type.

	+--------------------------------------------------------------------------------------------------+
	| Variable	    | Type   | Description							   |
	|-------------------+--------+---------------------------------------------------------------------|
	| api		    | string | The api the consumer is requesting to access on a resource-id.	   |
	| method	    | string | The method the consumer is requesting to access on the APIs.	   |
	| body.*	    | string | The list of variables to be passed in the body of an API.	   |
	| time		    | time   | The time at which the data request was made.		   	   |
	| ip		    | ip     | The originating IP address of the token request.			   |
	|												   |
	| tokens_per_day    | number | Total number of tokens issued today to the consumer for a resource. |
	|												   |
	| country	    | string | consumer's country code from where the request for token originated.|
	| region	    | string | consumer's region from where the request for token originated.	   |
	| timezone	    | string | consumer's timezone from where the request for token originated.	   |
	| city		    | string | consumer's city from where the request for token originated.	   |
	| latitude	    | number | consumer's latitude from where the request for token originated.	   |
	| longitude	    | number | consumer's longitude from where the request for token originated.   |
	|												   |
	| cert.class	    | string | consumer's certificate attributes				   |
	| cert.cn	    | string | 		"							   |
	| cert.o	    | string | 		"							   |
	| cert.ou	    | string | 		"							   |
	| cert.c	    | string | 		"							   |
	| cert.st	    | string | 		"							   |
	| cert.gn	    | string | 		"							   |
	| cert.sn	    | string | 		"							   |
	| cert.title	    | string | 		"							   |
	|												   |
	| cert.issuer.cn    | string | consumer's certificate issuer details				   |
	| cert.issuer.o	    | string | 		"							   |
	| cert.issuer.email | string | 		"							   |
	| cert.issuer.ou    | string |		"							   |
	| cert.issuer.c     | string | 		"							   |
	| cert.issuer.st    | string | 		"							   |
	+-------------------+------------------------------------------------------------------------------+

Using pyIUDX SDK:

	from pyIUDX.auth import auth	
	
	iudx_auth = auth.Auth("certificate.pem","private-key.pem") 

	iudx_auth.set_policy("*@iisc.ac.in can access rs1.com/my-resource-name")

CURL example:

	Request:

		curl -XPOST https://auth.iudx.org.in/auth/v1/acl/set		\

			--cert certificate.pem --key private-key.pem		\

			-H 'content-type: application/json'			\

			-d '{"policy":"*@iisc.ac.in can access rs1.com/my-resource-name"}'

	Response:

		200 OK

See also:

	acl API:
		https://auth.iudx.org.in/auth/v1/acl/help

	acl/append API:
		https://auth.iudx.org.in/auth/v1/acl/append/help

	node-aperture at github.com:
		https://github.com/rbccps-iisc/node-aperture
